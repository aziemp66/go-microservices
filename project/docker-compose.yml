version: 3,
name: go-microservice
services:
  front-end:
    build:
      context: ../front-end
      dockerfile: ../front-end/front-end.dockerfile
    restart: always
    ports:
      - "80:80"
    deploy:
      mode: replicated
      replicas: 1
  postgres:
    image: "postgres:14.2"
    ports:
      - "6543:5432"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/
  mongo:
    image: "mongo:6.0"
    ports:
      - "17027:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongodb:/data/db
  broker-service:
    build:
      context: ../broker-service
      dockerfile: ../broker-service/broker-service.dockerfile
    restart: always
    ports:
      - "8080:80"
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ../broker-service/logs:/app/logs
  authentication-service:
    build:
      context: ../authentication-service
      dockerfile: ../authentication-service/authentication-service.dockerfile
    restart: always
    ports:
      - "8081:80"
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ../authentication-service/logs:/app/logs
    environment:
      - "DSN=host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=Asia/Jakarta connect_timeout=5"
    depends_on:
      - postgres
      - broker-service
  logger-service:
    build:
      context: ../logger-service
      dockerfile: ../logger-service/logger-service.dockerfile
    restart: always
    ports:
      - "8082:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      - MONGO_USERNAME=admin
      - MONGO_PASSWORD=password
    depends_on:
      - broker-service
      - mongo
  mailhog:
    image: "mailhog/mailhog:latest"
    ports:
      - "1025:1025"
      - "8025:8025"
  mail-service:
    build:
      context: "../mail-service"
      dockerfile: "../mail-service/mail-service.dockerfile"
    restart: always
    ports:
      - "8083:80"
    deploy:
      mode: replicated
      replicas: 1
    depends_on:
      - mailhog
